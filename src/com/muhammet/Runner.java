package com.muhammet;

public class Runner {

	public static void main(String[] args) {
		
		/*
		 * 1- Kod temiz bir þekilde yazýlmalý.(clean code). (code smell gelmesin :))
		 * 2- Sýnýflarýnýzý soyutlarken, sýnýf içinde bulunan methodlarýnýzýn tek bir 
		 * görev yapmasýný saðlayýn. Buna; Tek Sorumluluk Ýlkesi denilie
		 * (single responsbility).
		 * 3- Sýnýflarýnýzda olabildiðince az method kullanýn. 10-15 civarý iyidir.
		 * 4- Tek bir method tek bir iþ yapmalý. bir methodun yaptýðý iþ - kod baþka bir 
		 * yapý gvdesinde copy-pasle ile taþýnmýyor ve bulunmuyor ise doðru yoldasýnýz.
		 * 5- Method yapýlarýnýz olabildiðince küçük olmalý, 15-20 satýr ideal dir. 
		 * max 2 argüman almalýsýnýz.
		 * 6- Mehodlar, karar yapýlarýnda 7-8 den az olacak þekilde karar vermeliler.
		 * 7- Methodlarýmýz önce küçüktür, ancak yaþan sistemlerde isterler sürekli
		 * olarak artmaktadýr. bu nedenle method büyür. 5. maddede belirtilen þekilde 
		 * kodlarýnýzý methodlara bölmeniz önerilir.
		 * 8- Methodlar, farklý iþlemleri yapbilirler farklý isimlendirme alabilirlee
		 * ancak özleri ve yaptýklarý iþe bakýnca bir birine yakýn iþler yapabilirler.
		 * böyle bir durum varsa ortak alanlarýna göre methodlarý ayrýþtýrýr özelleþtirirsiniz.
		 * 9- Methodlar, isimlendirilirken yaptýklarý iþe paralel olarak emir kipi ile
		 * isimlendirme yaparýz.
		 * 10- Method isimlendirmesinda javada bir sýnýrlama yoktur.
		 * örn: musteriDatasindanGelenIdDegerininSatisDatasindaOlupOlmadiginiDon(long userId);
		 * 11- Eðer bir method ismi seçmekte zorlanýyor iseniz, muhtemelen o method birden
		 * çok iþ yapýyordur bu nedenle isim vermek zorlaþmýþtýr.
		 * 
		 */

	}

}
